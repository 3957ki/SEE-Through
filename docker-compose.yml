services:
  client:
    image: node:20.18.1-alpine
    container_name: client
    working_dir: /client
    command: sh -c "
        yarn install &&
        yarn build &&
        cp -r /client/dist/* /client/dist"
    volumes:
      - ./client:/client
      - ./media/uploads:/app/uploads

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./client/dist:/opt/app

  api:
    image: openjdk:17-alpine
    build: 
      context: ./api
    container_name: api
    working_dir: /api
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    command: sh -c "
        apk add --no-cache tzdata &&
        ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime &&
        export TZ=Asia/Seoul &&
        chmod +x /api/gradlew &&
        /api/gradlew clean build --stacktrace &&
        cp /api/build/libs/api-0.0.1-SNAPSHOT.jar /api/app.jar &&
        java -jar /api/app.jar"
    ports:
      - "41348:8080"
    volumes:
      - ./api/:/api
      - ./media/uploads:/app/uploads

  llm:
    build: 
      context: ./llm
      dockerfile: Dockerfile
    container_name: llm
    ports:
      - "32209:8000"
    volumes:
      - ./llm/:/llm
      - ./media/uploads:/app/uploads

  db:
    image: pgvector/pgvector:0.8.0-pg15
    build: 
      context: ./db
    container_name: db
    restart: always
    ports:
      - "57829:5432"
    environment:
      LANG: C.UTF-8
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./db:/var/lib/postgresql # 데이터 영구 저장용 볼륨