services:
  client:
    image: node:20.18.1-alpine
    container_name: client
    working_dir: /client
    environment:
      - VITE_API_SERVER_URL=${VITE_API_SERVER_URL}
      - VITE_LOCAL_SERVER_URL=${VITE_LOCAL_SERVER_URL}
    command: >
        sh -c "
        yarn install &&
        yarn build &&
        cp -r /client/dist/* /client/dist"
    volumes:
      - ./client:/client
      - ./media/uploads:/app/uploads
    networks:
      - see_through

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./client/dist:/opt/app
    networks:
      - see_through

  api:
    image: openjdk:17-alpine
    build: 
      context: ./api
    container_name: api
    working_dir: /api
    environment:
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      LLM_URL: ${LLM_URL}
      NICKNAME_URL: ${NICKNAME_URL}
      SWAGGER_USERNAME: ${SWAGGER_USERNAME}
      SWAGGER_PASSWORD: ${SWAGGER_PASSWORD}
    command: >
        sh -c "
        apk add --no-cache tzdata &&
        ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime &&
        export TZ=Asia/Seoul &&
        chmod +x /api/gradlew &&
        /api/gradlew clean build --stacktrace &&
        cp /api/build/libs/api-0.0.1-SNAPSHOT.jar /api/app.jar &&
        java -jar /api/app.jar"
    ports:
      - "41348:8080"
    volumes:
      - ./api/:/api
      - ./media/uploads:/app/uploads
    networks:
      - see_through

  llm:
    build: 
      context: ./llm
      dockerfile: Dockerfile
    container_name: llm
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DB_URL=${LLM_DB_URL}
    ports:
      - "32209:8000"
    volumes:
      - ./llm/:/llm
      - ./media/uploads:/app/uploads
    networks:
      - see_through

  db:
    image: pgvector/pgvector:0.8.0-pg15
    build: 
      context: ./db
    container_name: db
    restart: always
    ports:
      - "57829:5432"
    environment:
      LANG: C.UTF-8
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./db:/var/lib/postgresql # 데이터 영구 저장용 볼륨
    networks:
      - see_through

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - see_through

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - see_through

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - see_through
      
  jenkins:
    build: 
      context: ./jenkins
      dockerfile: Dockerfile
    container_name: jenkins
    environment:
      JENKINS_JAVA_OPTIONS: >-
        -Dhudson.model.DirectoryBrowserSupport.CSP="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:;" -Dhttp.nonProxyHosts="lab.ssafy.com|updates.jenkins.io" -Dhttps.nonProxyHosts="lab.ssafy.com|updates.jenkins.io"
      NO_PROXY: "lab.ssafy.com,updates.jenkins.io"
      JENKINS_OPTS: "--prefix=/jenkins"
    ports:
      - "11027:8080"
    volumes:
      - ./jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose:ro
    networks:
      - see_through

volumes:
  grafana-data:

networks:
  see_through:
    external: true
